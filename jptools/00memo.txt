NVDA 日本語版 開発者メモ

NVDA日本語チーム 西本卓也

1. ビルド環境

NVDA 2014.3jp の場合

(1) Windows 7 SP1 64ビット

備考：Windows 8.1 でビルドして 7 にインストールするとエラーが出る問題
https://sourceforge.jp/ticket/browse.php?group_id=4221&tid=34057

(2) Visual Studio 2012 Express for Desktop (Update 4)
(3) Visual Studio 2013 Express for Desktop (Update 3)

備考：
VS2012 は NVDA コアのコンパイルに必要、VS2013 は JTalk のコンパイルで使用。
後述の setup-vc2013 を変更すれば JTalk は VS2012 でコンパイルできると思われるが、
確認していない。
Express ではなく Pro や Ultimate でもよい。


(4) git (msysgit 1.9.2)

備考：
git push するためには push 先のアカウントのセットアップや公開鍵の設定、
権限の取得が必要。


(5) 7z (:\Program Files (x86)\7-Zip\7z.exe に PATH が通っていること）


2. サブモジュールの取得

git submodule sync
git submodule update --init --recursive


2.1 git submodule のエラー対応

> git submodule update --init

fatal: reference is not a tree: 1e1e7587cfbc263b351644e52fdaf2684103d6c8
Unable to checkout '1e1e7587cfbc263b351644e52fdaf2684103d6c8' in submodule path
'include/liblouis'

include/liblouis サブモジュールの checkout に失敗している。
liblouis に cd して git fetch -t してからやり直してみる：

> cd include\liblouis
> git fetch -t

remote: Counting objects: 412, done.
remote: Compressing objects: 100% (144/144), done.
Remote: Total 412 (delta 268), reused 412 (delta 268)eceiving objects:  91% (37
Receiving objects: 100% (412/412), 86.54 KiB | 0 bytes/s, done.
（略）

> cd ..\..
> git submodule update --init --recursive


3. 署名なしビルド

署名なしビルドは、最上位のディレクトリで以下を実行

(1) jptools\setup-vc2013.cmd
(2) jptools\setupMiscDepsJp.cmd
(3) jptools\build.cmd

JTalk または日本語点訳エンジンを更新しない場合は (1) (2) は不要。

出力は output フォルダに作られる。
実行した日付のついた nvda_jpbetaYYMMDD.exe というファイル名になる。


4. その他の作業用スクリプト

レポジトリにプッシュ
jptools\push_remote.cmd

clean miscdep
jptools\clean_miscdep.cmd

copy Japanese character symbols to subversion repo
jptools\copy_symbols_to_srt.cmd


5. 2014.4jp 以降の署名つきビルド

事前に不要ファイルの確認

(0) jptools\findBackupFiles.cmd

必要に応じて削除。

署名つきビルドは、最上位のディレクトリで以下を実行

(1) jptools\setup-vc2013.cmd
(2) jptools\setupMiscDepsJp.cmd
(3) jptools\kcCertMiscDepsJp.cmd
(4) jptools\kcCertBuild.cmd

JTalk または日本語点訳エンジンを更新しない場合は (1) (2) (3) は不要。
(3) は libopenjtalk, libmecab, directbm の各DLLを署名する。


6. 2014.3jp までの署名つきリリースの手順

まず、管理者としてコマンドプロンプトを実行する。

上記 3. と同様に日本語エンジン系をビルド。

(1) jptools\setup-vc2013.cmd
(2) jptools\setupMiscDepsJp.cmd

(3) jptools\selfcert_clean.cmd 初期化
(4) jptools\selfcert_setup.cmd パスフレーズを空欄で設定
(5) jptools\selfcert_scons.cmd SET VERSION の値を更新してビルド実行
(6) jptools\selfcert_pack_dist.cmd: distの中身をアーカイブ nvda-*jp-*-dist-self.zip を送付。

戻ってきたファイルで dist の中身を上書き。

(7) jptools\signed_makensis.cmd: 署名されたdistをmakensisでlauncherに変換。
(8) jptools\signed_output_pack.cmd: outputフォルダの中のlauncherをアーカイブ nvda-*jp-*-launcher-unsigned.zip して送付。

過去の記録
http://ja.nishimotz.com/nvdajp_certfile


7. 過去の 00readme.txt の内容

更新予定

A part of NonVisual Desktop Access (NVDA)
This file is covered by the GNU General Public License.
See the file COPYING for more details.
Copyright (C) 2013 Takuya Nishimoto

checkCharDesc.py
====================================

character description consistency check

> cd jptools
> python checkCharDesc.py


checkSymbols.py
====================================

symbols consistency check

> cd jptools
> python checkSymbols.py


updateCharDesc.py
====================================

convert characters.dic to characterDescriptions.dic

> cd jptools
> python updateCharDesc.py > newfile.dic


jtalkRunner.py
====================================

JTalk test runner.

> cd jptools
> python jtalkRunner.py


jpBrailleRunner.py
====================================

Japanese braille test harness (new version)

> cd jptools
> python jpBrailleRunner.py

Output files:

  * __h1output.txt
  * __h2output.txt
  * __h2log.txt

evaluate.py
====================================

Japanese braille test harness (legacy version)

> cd jptools
> python evaluate.py


