NVDA User Guide

Last updated March 5, 2007.

Contents
1. Introduction
2. System Requirements 
3. Getting NVDA
4. Starting NVDA
 5. The User Interface
5.1. Showing and Hiding the interface
5.2. Saving and reloading the configuration
5.3. User interface settings
5.4. Synthesizers
  5.5. Voice settings
5.6. Keyboard echo
5.7. Mouse settings
5.8. Object presentation
6. Navigating with NVDA
6.1. Navigating by focus
6.2. Object navigation
6.3. Reviewing text in the current object
6.4. Navigating with the system caret
6.5. Navigating with the Mouse
7. Virtual Buffers
8. Progress bar beeps
9. The beep speech mode

1. Introduction

NVDA is a screen reader for the Windows Operating System which allows the user to access the computer with out needing any vision. By querying the Operating System for information about where the user is, what windows and controls are on the screen, and by watching the Operating System closely for changes, NVDA can process and output this information via synthetic speech, so that the user understands exactly what is happening on screen.
 
NVDA currently support Sapi5 speech synthesizers, and uses a modular structure which allows support for other speech synthesizers to be written. Sapi4 is not supported. However, work is currently underway to support them in the near future.

NVDA uses a mixture of Microsoft Active Accessibility (MSAA), low-level Windows API calls, and specific application object models. NVDA does not use video intercept drivers or display hooks. The advantage of all this is that NVDA can work on many different system configurations, and does not depend on particular colour settings or video display modes. Also NVDA does not have to install any special drivers or files which would require the computer to be restarted before running NVDA for the first time.

NVDA does not yet support Braille displays, though work is currently being done on this.

There are currently a few translations for NVDA's user interface and messages  in different languages, but more are certainly bound to appear in future. 

NVDA should be able to read text in any language, as long as you have a sapi5 synthesizer that can speak that language.

NVDA is experimental software, and is under development. It is also open-source, which means that anyone is able to read the source code, or even change it to suit their needs. However, because of this, there may be bugs, and things may not work as expected on everyone's systems. 

But as more and more people test out NVDA, and provide user feedback, NVDA should be able to grow even better, acting as a completely cost-free access solution for blind or vision impaired users of Windows.

NVDA works with many programs, and it really just depends on how accessible they are, as to how good they will work with NVDA.

Apart from all the general Windows functionality, NVDA works with WordPad, Notepad, Outlook Express and Internet Explorer. It also has basic support for Microsoft Word 2000/xp/2003, and Microsoft Excel 2000/xp/2003. NVDA has not been tested with Microsoft Office 2007.

NVDA also has extensive support for Mozilla Firefox (version 2 and up). Firefox is the recommended web browser for maximum accessibility with NVDA.

This User guide is not meant to be a complete guide to using NVDA and Windows, but just enough information to get you started with NVDA, so that you can navigate around, and self-learn how to do many more things.

2. System requirements

NVDA runs on Windows XP and Windows Vista. NVDA may work on Windows 2000, but not enough people have tested this yet.

NVDA will not work on Windows 95/98/ME, and will not yet work on 64 bit versions of Windows.
 

You should have at least 256MB of ram, and it is probably best to run NVDA on a computer with a speed of 1.0 GHZ or faster. NVDA will run on slower computers, but its start-up time may be quite slow, plus intensive tasks such as loading web pages may be also very slow.

3. Getting NVDA

If you haven’t yet got a copy of NVDA, you can download it from the NVDA website at:
http://www.nvda-project.org/

Go to the download heading and you will find a link to download the latest revision of NVDA.

NVDA releases are currently numbered by revision. This revision number is exactly how many times the source code has been changed. However, just because a release is put on the website, does not mean it is completely bug-free. It just means that the developers feel that the current features in NVDA seem to be working quite well on their own systems, and that it’s probably time to have NVDA tested by the rest of the world.

The zip file you download will need to be unzipped to any directory on your system. NVDA will usually be run from somewhere on your hard drive, but NVDA can be also run off a USB key, or even off a CD.
 

4. Starting NVDA

To start NVDA, you need to press enter (or double click) on nvda.exe in the NVDA directory.

As NVDA starts, you will first hear an ascending set of tones (telling you that NVDA is loading). You should then hear it say "NVDA Started". Depending on how fast your computer is, or if you are running NVDA off a USB key or other slower medium, it may take a little while to start. If it is taking an extra long time, NVDA should say "Loading subsystems. Please wait...”

If you don't hear any of this, or you hear the Windows error sound, or a descending set of tones, then this means that NVDA has an error, and you will need to possibly report a bug to the developers. Please check out the NVDA website for how to do this.

Once NVDA starts successfully, it should bring up the NVDA interface window, which allows you to control NVDA's settings, and to exit NVDA all together.

5. The User Interface

The NVDA Interface Window contains a menu bar with menus that allow you to change settings and exit NVDA. The Window also contains a quick-start document which lists most of the keyboard commands you might want to use while running NVDA.

The NVDA Interface window is a good place to get used to navigating around with NVDA, since it has a document in which you can arrow around, plus lots of menus and dialog boxes.

5.1. Although the NVDA interface window appears when you start NVDA, it doesn't have to be around for the whole time of using the program. There is nothing worse than having too many open applications to alt-tab through when trying to find a particular one.
  
To hide the NVDA interface window, you can simply press alt+f4 when inside it. This will not exit NVDA altogether, but only hide the interface.

To show the interface again at any time, you can either press insert+n, or you can press enter or double click on NVDA in the Windows System Tray.

5.2. Saving and Reloading the configuration

NVDA stores its settings in a file called nvda.ini in its directory. You will probably never have to touch this file, but for advanced users, this file does allow you to change some extra settings which don't yet have dialog boxes to do so.

NVDA does not automatically save your settings, so if you exit NVDA, and then restart it, the settings will go back to the original values. To save the settings, you can either choose the save item in the NVDA menu, or press control+s when in the NVDA interface window.

If NVDA is on a read-only file system, such as a CD, it will not be able to save your settings, and it will tell you so.

If you ever make a mistake with your settings and need to revert back to the saved settings, you can either choose the "revert to saved" configuration item in the NVDA menu, or you can press control+r in the NVDA Interface Window.    


5.3. User Interface settings

The User Interface settings dialog box is found in the Preferences menu. This allows you to configure options about whether the NVDA Interface window will be shown on NVDA start-up, whether you want NVDA to automatically save your settings on exit, and also allows you to change the language of NVDA's interface and messages.

5.4. Synthesizers

The Synthesizers item in the Preferences menu allows you to select what Synthesizer to use. Currently NVDA only supports the Sapi5 synthesizer, so you will not have any need to use this, but in future this is where you will be able to select between various synthesizers.

5.5. Voice settings

Voice settings, in the preferences menu, brings up a dialog box which allows you to change what voice NVDA uses, plus to change the rate, pitch and volume of the voice.

The rate can also be changed from anywhere on the system by using insert + the page up or page down keys. Page up for faster by 5%, and page down for slower by 5%.

There are also another two options: Speak punctuation, and Say cap before capitals. 
  
Speak punctuation allows you to set whether NVDA will actually say the punctuation symbols, or only use them to control the pattern of speech.
 
Say cap before capitals is an option that tells NVDA to say the word "cap" before speaking any single capitalized character. Usually NVDA will raise the pitch of the voice for capital letters, but some voices may not support this, so then it might be useful to turn on this option.

5.6. Keyboard echo

NVDA can say the characters you type, say the words you type, and also say the key combinations you type. All three are configurable from the Keyboard echo settings item in the Preferences Menu. 

To change these settings from anywhere on your system, insert+2 toggles speak typed characters, insert+3 toggles speak typed words, and insert+4 toggles speak command keys (key combinations).

5.7. Mouse settings

You can configure NVDA to report when the shape of the mouse cursor changes (such as when a program is loading, or when you move the mouse in to an editable field). You can also configure whether you want NVDA to automatically speak what is currently under the mouse as it moves. These options can be found in the Mouse settings dialog, in the Preferences menu.

5.8. Object Presentation

The Object Presentation item in the Preferences menu brings up a dialog which allows you to configure how NVDA deals with certain controls (or objects) in Windows.

You can tell NVDA whether you wish for tooltips to be read when they appear, whether you want help balloons to be read as they appear, whether you want the state of a control (such as checked, selected, pressed etc) to be reported before its name and type, and whether you want NVDA to beep when a progress bar is moving.

6. Navigating with NVDA

6.1. Navigating with the focus

The Most common way of navigating around Windows with NVDA, is to just move around with normal keyboard commands, such as tab and shift tab too move forward and back between controls, pressing alt to get to the menu bar and then using the arrows to navigate menus, using alt-tab to move between running applications. As you do this, NVDA will announce what has focus. 

When NVDA announces an object (e.g. when it receives focus), it will usually say the object's name, type, value, description, keyboard shortcut, and positional information. This is quite similar to other screen readers; however the types of objects may be a little different.  

6.2. Object navigation

If you wish to look around the Operating System a bit, but with out moving the focus, you can use NVDA's object navigation. This allows you to move from object to object in a tree like structure. 

The tree structure of objects starts at the desktop window, the root of the tree. The first branches of the tree are the currently running applications, and of course these applications have their own branches (objects), representing various parts of the application. 

The tree structure can get quite large, but it does allow you to navigate in a logical order, so that you can quickly find the information you need.

This structure has nothing to do with how the objects are laid out on the screen, but how they are related logically. This may take a little bit of time to get used to, but once you grasp this, you should be able to move around quite easily.

NVDA currently can not navigate the objects in a screen layout due to not having a video intercept driver or display hooks. NVDA chooses not to interact with the screen, more so because over all it should allow a much clearer, and more logical perception of an application and the operating system, rather than trying to picture a flat screen layout.

Not all applications have a perfect tree structure, but this is up to the developer of that particular application. Most seem to be ok; certainly most Dialog boxes and highly structured applications seem to have gotten it right.

To navigate by object, use the following keys:
Speak current object: insert+numpad5
Move to parent object (moving towards the root of the tree): insert+numpad8
Move to previous object (the object directly before this one on the same level): insert+numpad4
Move to Next object (the object directly after this one on the same level): insert+numpad6
Move to first child object (The first branch coming out of this one): insert+numpad2
Move to focus: insert+numpadMinus
Activate current object (e.g. press enter / click / double click): insert+numpadEnter
Move the mouse to the current object: insert+numpadDivide
Move to the mouse: insert+numpadMultiply
note: numpad keys require numlock key to be turned off to work properly

6.3. Reviewing the text in the current object

Sometimes you might want to know how something is spelt, or perhaps you need to read something by words. You can review the text inside the current object with the numpad keys:
Top line: shift+numpad7
Previous line: numpad7
Current line: numpad8
Next line: numpad9
Bottom line: shift+numpad9
Previous word: numpad4
Current word: numpad5
Next word: numpad6
Start of line: shift+numpad1
Previous character: numpad1
Current character: numpad2
Next character: numpad3
End of line: shift+numpad3
Say all text: numpadPlus
note: numpad keys require numlock key to be turned off to work properly

For most objects, the text inside is made up of name, value and description. However for objects that actually have real text, or editable content, then the text is the actual text in the object.

For example: a list item in a list will have text which contains its name, value and description. But an edit field, or a dos console window, will have the actual text that is in the field or window.

6.4. Navigating with the system caret

When the focus is on an object that has an edit cursor (system caret), you can arrow around and edit like you normally would. NVDA will announce as you move by character, word, line, and will also announce selecting and unselecting text.

When you move with the system caret, the position of the review cursor will also be updated to match the system caret.

You can also read the entire text (say all) with insert+downArrow. Note though that this is different to numpadPlus which only moves the review cursor, this moves the system caret as it goes.

6.5. Navigating with the Mouse

When you move the Mouse, NVDA can be configured to report the object that is directly under the mouse pointer, as it moves over it.

By using the mouse, even blind users may be able to gain an idea of how the screen is laid out. NVDA can only read the object that is under the mouse, it can not yet read particular textual content or other smaller features.

7. Virtual Buffers

Complex documents, such as web pages, are represented in NVDA with in a Virtual Buffer.

A Virtual Buffer is a flat textual representation of the document, which allows the user to arrow around, to read the text and fields that are in the document. Apart from arrowing around, you can also press enter or space on links and buttons to activate them, press enter or space on edit fields to then edit their content, press enter or space on check boxes or radio buttons to select them, and press enter or space on combo boxes to then be able to change their selection.

As you arrow in to a field, the field type (such as link, heading, list etc) is spoken, however this information is not physically in the buffer, which means you can arrow through the text as normal.

Currently NVDA uses Virtual Buffers for both Internet Explorer and Mozilla Firefox. 

Virtual Buffers have the ability to be updated dynamically, however only Mozilla Firefox currently makes use of this feature. Although Internet Explorer will probably display most pages correctly, Firefox is much better with content that changes due to JavaScript etc.

Because of the complexity of Virtual Buffers, NVDA may take a bit of time to load some pages. Most pages will load quite quickly, but some very large page may take over 5 seconds or more.

For quicker navigation, NVDA also provides single character keys to jump to certain fields in a virtual buffer.

By themselves they jump to the next field, with the shift key they jump to the previous field.

Keys:
heading: h
list: l
list item: i
table: t
link: k
paragraph: p
form field: f

Sometimes you may wish to interact with form fields with out the virtual buffer keys getting in the way. Virtual Buffer Pass-Through mode is exactly for this problem, and can be toggled on and off with insert+space.

Generally though, when pressing on a form field it will automatically be turned on, and when loading a new page it will be turned off.

8. Progress bar beeps

Progress bars are used in Windows to denote how complete a task is. Actions such as copying files in Windows Explorer, loading a web page in Internet Explorer, checking your email in Outlook Express all have progress bars. NVDA can beep at a certain pitch to tell you where a progress bar is up to. As the pitch gets higher, the closer the progress bar is to 100%. You will soon learn exactly what 0 and 100 sound like, and therefore you will be able to tell exactly how far along a progress bar is.

9. Beep speech mode

The beep speech mode in NVDA is a mode where instead of NVDA speaking everything, it simply makes a very quick high-pitched beep. This is useful when you know you are doing a task where there are a lot of screen updates, like using a dos program to burn a CD, or copy lots of files. Rather than hear every file or percentage, or rather than constantly pressing the control key to shut up speech, you can press insert+s twice to change to beep speech mode, and all you will hear is little beeps, until the screen stops updating (i.e. the task is finished).
 
To set the speech back to normal, press insert+s again.

